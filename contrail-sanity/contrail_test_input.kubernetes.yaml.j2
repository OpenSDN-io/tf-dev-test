provider_config:
  bms:
    ssh_user: "{{ SSH_USER }}"
    ssh_pwd:
    domainsuffix: "{{ DOMAINSUFFIX }}"

instances:
{%- if CONTROLLER_NODES is defined and CONTROLLER_NODES|length %}
{%- set CONTROLLER_NODES = CONTROLLER_NODES.split(',')  %}
{%- set AGENT_NODES = AGENT_NODES.split(',')  %}
{% for node in CONTROLLER_NODES %}
  {{ node | replace(".", "_") }}:
    ip: {{ node }}
    provider: bms
    roles:
      analytics:
      analytics_snmp:
      analytics_alarm:
      analytics_database:
      config:
      config_database:
      control:
      webui:
      vrouter:
      k8s_master:
      kubemanager:
{%- if node in AGENT_NODES %}
      vrouter:
      k8s_node:
{%- endif %}
{%- endfor %}
{% endif %}

{%- if AGENT_NODES is defined and AGENT_NODES|length %}
{%- for node in AGENT_NODES %}
{%- if node not in CONTROLLER_NODES %}
  {{ node | replace(".", "_") }}:
    ip: {{ node }}
    provider: bms
    roles:
      vrouter:
      k8s_node:
{%- endif %}
{%- endfor %}
{%- endif %}

global_configuration:
  CONTAINER_REGISTRY: "{{ CONTAINER_REGISTRY }}"
  REGISTRY_PRIVATE_INSECURE: True

contrail_configuration:
  CONTRAIL_CONTAINER_TAG: "{{ CONTRAIL_CONTAINER_TAG }}"
  LOG_LEVEL: SYS_DEBUG
  KUBERNETES_PUBLIC_FIP_POOL:
     domain: default-domain
     name: __fip_pool_public__
     network: __public__
     project: k8s-default
  SSL_ENABLE: "{{ SSL_ENABLE }}"
  RABBITMQ_USE_SSL: "{{ SSL_ENABLE }}"
  CASSANDRA_SSL_ENABLE: "{{ SSL_ENABLE }}"

deployment:
    orchestrator: kubernetes
{%- if DEPLOYER == 'ansible' %}
    deployer: contrail-ansible-deployer
{%- else %}
    deployer: {{ DEPLOYER }}
{%- endif %}

test_configuration:
    image_web_server: {{ IMAGE_WEB_SERVER }}
    use_project_scoped_token: True
